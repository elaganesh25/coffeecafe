name: Build, Scan, and Deploy

on:
  push:
    branches: [ main ]

jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
     

    - name: Login to DockerHub
      run: docker login -u elaganesh25 -p ${{ secrets.DOCKERGITHUBACTION }}

    - name: Build Docker image
      run: docker build -t elaganesh25/coffeeshop_web:latest .

    - name: Push Docker image
      run: docker push elaganesh25/coffeeshop_web:latest

    - name: Run Tests
      run: |
        python manage.py test  

  VulScan:
    needs: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
      with:
        image-ref: elaganesh25/coffeeshop_web:latest
        format: table
        exit-code: 0
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Run Gitleaks secret scan
      uses: gitleaks/gitleaks-action@v2

  
   

  Deploy:
    needs: VulScan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'latest'

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name coffeeshop-cluster

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml